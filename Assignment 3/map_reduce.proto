syntax = "proto2";

// The master service definition.
service MasterService {
  rpc SendMapperData(MapDataRequest) returns (MapDataResponse) {}
}

// The mapper service definition.
service MapperService {
  rpc Partitioning(Empty) returns (MapDataResponse) {}
  rpc Mapping(Empty) returns (MapDataResponse) {}
  rpc GetMapperData(MapDataRequest) returns (MapDataResponse) {}
  rpc SendKeyValuePair(KeyValueRequest) returns (KeyValueResponse) {}
}

// The reducer service definition.
service ReducerService {
  rpc Reducing(Empty) returns (ReduceDataResponse) {}
  rpc ShuffleSorting(Empty) returns (ReduceDataResponse) {}
  rpc GetMapperData(Empty) returns (ReduceDataResponse) {}
  rpc SendNewCentroids(CentroidRequest) returns (CentroidResponse) {}
}

message Empty {

}

message MapDataResponse {
  required int32 mapper_id = 1;
  required string status = 2;
}

message MapDataRequest {
  repeated int32 input_split = 1;
  repeated Point centroids = 2;
  required string input_path = 3;
}

message Point {
  required float x = 1;
  required float y = 2;
}
message ReduceDataRequest {
  optional int32 reducers = 1;
  required string ip = 6;
}
message ReduceDataResponse {
  required int32 reducer_id = 1;
  required string status = 2;
}

// The message containing mapper data.
message MapperDataRequest {
  required int32 mapper_id = 1;
  required string ip = 6;
}

message MapperDataResponse {
  repeated float data_points = 1;
}

// The message containing a data point.
message KeyValueRequest {
  required int32 reducerId = 1;
  required string ip = 6;
}

message KeyValueResponse {
  repeated KeyValue key_value_pairs = 1;
}

// The message containing a partition.
message CentroidRequest {
  required string portNo = 6;
}

message CentroidResponse {
  repeated KeyValue key_value = 1;
}

// A key-value pair.
message KeyValue {
  required int32 key = 1;
  required Point value = 2;
}
