# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import market_pb2 as market__pb2


class MarketStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterSeller = channel.unary_unary(
                '/Market/RegisterSeller',
                request_serializer=market__pb2.regSeller.SerializeToString,
                response_deserializer=market__pb2.sellerMarketResponse.FromString,
                )
        self.AddProdcut = channel.unary_unary(
                '/Market/AddProdcut',
                request_serializer=market__pb2.sellItem.SerializeToString,
                response_deserializer=market__pb2.sellerMarketResponse.FromString,
                )
        self.UpdateItem = channel.unary_unary(
                '/Market/UpdateItem',
                request_serializer=market__pb2.updateItem.SerializeToString,
                response_deserializer=market__pb2.sellerMarketResponse.FromString,
                )
        self.DelItem = channel.unary_unary(
                '/Market/DelItem',
                request_serializer=market__pb2.delete.SerializeToString,
                response_deserializer=market__pb2.sellerMarketResponse.FromString,
                )
        self.ShowItems = channel.unary_unary(
                '/Market/ShowItems',
                request_serializer=market__pb2.requestDisplayItems.SerializeToString,
                response_deserializer=market__pb2.displaySellerItems.FromString,
                )
        self.Search = channel.unary_unary(
                '/Market/Search',
                request_serializer=market__pb2.reqSearch.SerializeToString,
                response_deserializer=market__pb2.displaySellerItems.FromString,
                )
        self.Buy = channel.unary_unary(
                '/Market/Buy',
                request_serializer=market__pb2.BuyItem.SerializeToString,
                response_deserializer=market__pb2.sellerMarketResponse.FromString,
                )
        self.Wishlist = channel.unary_unary(
                '/Market/Wishlist',
                request_serializer=market__pb2.wishlist.SerializeToString,
                response_deserializer=market__pb2.sellerMarketResponse.FromString,
                )
        self.Rating = channel.unary_unary(
                '/Market/Rating',
                request_serializer=market__pb2.rate.SerializeToString,
                response_deserializer=market__pb2.sellerMarketResponse.FromString,
                )


class MarketServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterSeller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProdcut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DelItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Buy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Wishlist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rating(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterSeller,
                    request_deserializer=market__pb2.regSeller.FromString,
                    response_serializer=market__pb2.sellerMarketResponse.SerializeToString,
            ),
            'AddProdcut': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProdcut,
                    request_deserializer=market__pb2.sellItem.FromString,
                    response_serializer=market__pb2.sellerMarketResponse.SerializeToString,
            ),
            'UpdateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateItem,
                    request_deserializer=market__pb2.updateItem.FromString,
                    response_serializer=market__pb2.sellerMarketResponse.SerializeToString,
            ),
            'DelItem': grpc.unary_unary_rpc_method_handler(
                    servicer.DelItem,
                    request_deserializer=market__pb2.delete.FromString,
                    response_serializer=market__pb2.sellerMarketResponse.SerializeToString,
            ),
            'ShowItems': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowItems,
                    request_deserializer=market__pb2.requestDisplayItems.FromString,
                    response_serializer=market__pb2.displaySellerItems.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=market__pb2.reqSearch.FromString,
                    response_serializer=market__pb2.displaySellerItems.SerializeToString,
            ),
            'Buy': grpc.unary_unary_rpc_method_handler(
                    servicer.Buy,
                    request_deserializer=market__pb2.BuyItem.FromString,
                    response_serializer=market__pb2.sellerMarketResponse.SerializeToString,
            ),
            'Wishlist': grpc.unary_unary_rpc_method_handler(
                    servicer.Wishlist,
                    request_deserializer=market__pb2.wishlist.FromString,
                    response_serializer=market__pb2.sellerMarketResponse.SerializeToString,
            ),
            'Rating': grpc.unary_unary_rpc_method_handler(
                    servicer.Rating,
                    request_deserializer=market__pb2.rate.FromString,
                    response_serializer=market__pb2.sellerMarketResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Market', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Market(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Market/RegisterSeller',
            market__pb2.regSeller.SerializeToString,
            market__pb2.sellerMarketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddProdcut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Market/AddProdcut',
            market__pb2.sellItem.SerializeToString,
            market__pb2.sellerMarketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Market/UpdateItem',
            market__pb2.updateItem.SerializeToString,
            market__pb2.sellerMarketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DelItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Market/DelItem',
            market__pb2.delete.SerializeToString,
            market__pb2.sellerMarketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Market/ShowItems',
            market__pb2.requestDisplayItems.SerializeToString,
            market__pb2.displaySellerItems.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Market/Search',
            market__pb2.reqSearch.SerializeToString,
            market__pb2.displaySellerItems.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Buy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Market/Buy',
            market__pb2.BuyItem.SerializeToString,
            market__pb2.sellerMarketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Wishlist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Market/Wishlist',
            market__pb2.wishlist.SerializeToString,
            market__pb2.sellerMarketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rating(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Market/Rating',
            market__pb2.rate.SerializeToString,
            market__pb2.sellerMarketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
